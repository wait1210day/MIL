            The Interactive Language for Matbar
                SP1. Surprise

    ……
    ……
    诶，你怎么突然，，，点进来了？（＃°Д°）
    ……
    其实这个文档，我还没想好要写什么的说……（＞﹏＜）
    要不，你先……退出去？
    等我想好了要说什么你才……进来？
    ……
    ……
    呜诶，你别真走啊！ヽ(*。>Д<)o゜
    人家才不是为了给你惊喜才这么说的呢！绝对不是！哼！（╯‵□′）╯︵┴─┴
    ……
    
    咳咳，刚才可能吓到各位了。
    重新介绍一下，本文档是「The Interactive Language for Matbar」的一个
附属文档（SP1：Surprise，说白了就是买萌用的）。
    实际上，我们在默认的 MIL 语言解释器 demo（即 matbar）中藏了一个小彩蛋，
您需要根据我们散落在文档各处的信息以及本文档所包含的几条有限数量的线索来知道彩蛋
如何使用。当然，您只能从文档中获取少量的关于彩蛋的信息，完整的彩蛋还需要您慢慢在
程序中摸索。
    首先，是关于彩蛋的提示：
    (1) 彩蛋存在于程序本体中，可以通过输入特殊的字符（这些特殊字符您可以在接下
        来的「线索」部分获得提示）来激活彩蛋。注意，彩蛋仅仅是 matbar 实现的
        功能，而不是 MIL 或者 MIRL 语言标准中的一部分，因此您可能无法在其他
        MIL/MIRL 解释器实现中使用本彩蛋。
    (2) 您只会得到有限数量的线索信息，但是线索提示会告诉您如何使用有限的线索推
        导出最终答案。
    (3) 线索数量比较多，请务必耐心研究，必要时可以借助编程解决。
    (4) 请先熟悉计算机科学以及密码学中的一些基本加密算法。
    (5) 可能会用到一些计算机程序帮助解决问题。

    线索提示：
    (1) 您即将面临的是一个 7 层加密的密码。
    (2) 第一层需要您根据下文中的「已知线索」构建初始密码上下文，称为 R1
        提示 1：R1 应该是一个矩阵
        提示 2：两个字符才构成一个矩阵元素
    (3) 第二层需要一次简单的矩阵变换，由 R1 变换得到 R2
        提示 1：变换方法：「 | => - 」
    (4) 第三层需要去掉无意义数据，由 R2 得到 R3
        提示 1：请联系第五层密码中的字符映射规则，思考什么是「无意义数据」
    (5) 第四层需要进行一次码表字符映射操作，由 R3 映射得到 R4
        提示 1：映射用的码表是我们几乎每天都在使用的电子产品
        提示 2：映射规则只对字母有效，其他字符全部保留不变
    (6) 第五层需要进行一次码表字符映射操作，由 R4 映射得到 R5
        提示 1：映射用的码表是一个国际规定的标准码表
        提示 2：映射规则对 R4 中的所有字符都有效
        提示 3：两个字符（即一个矩阵元素）作为映射的基本单位
    (7) 第六层是一种密码学算法编码，由 R5 解码得到 R6
        提示 1：R5 矩阵的每一行都是一个单独的编码串
        提示 2：仔细观察每一个编码串的内容，你会很容易发现它们使用的加密算法
    (8) R6 解码基本上就是原文本体了，我们只需要将它们重组一下
        提示 1：联系 MIL 语法规则中的「控制指令（Control Instruction）」
                一节，您或许能够发现解码出来的字符串应该如何组合。
    (9) 最后获得的字符串应该是有意义的，且不包含任何数字，只有小写英文字母。
    (10) 在第八条提示中重组完成的字符串可能还需要一定的修饰才能触发彩蛋。
        提示 1：同样联系 MIL 语法规则，您或许能够知道该如何修饰得到的字符串。

